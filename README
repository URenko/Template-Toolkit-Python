This is the README file for the Template Toolkit Python port.

I (Sean McAfee) am now checking in my first draft.  Here follows a
list of some of the many outstanding issues:

*  I have translated the Perl implementation very literally, even when
   more Pythonic idioms may ultimately be available.  One of the more
   obvious examples is in the Template::process routine, which in the
   original Perl uses a reference to distinguish between a template in
   a file and in a string; a more Pythonic tack might be to supply two
   separate methods, process and processString.  In fact, Python lacks
   altogether a reference type comparable to Perl's, and the
   util.Reference class I wrote to fill this hole is a simple
   single-element container class that lacks any reference semantics
   at all.  Nevertheless, it seems to work well enough for simple
   uses.  It may be possible to eliminate it altogether.

*  I have translated Template::Grammar.pm directly into
   template/grammar.py, rather than editing Parser.yp directly.
   Several of the rules are untested, and some will definitely not
   work, as I have recorded in comments.

*  Comments have been largely elided in the translation process.

*  Bug in constants.t!  List context sometimes causes first arg to ok()
   to go missing completely!
